a{color:#000}a,a:hover,a:link,a:visited{text-decoration:none}aside,footer,header,main,nav,section{display:block}h1,h2,h3,h4,h5,h6,p{font-size:inherit;font-weight:inherit}h1,h2,h3,h4,h5,h6{font-family:"Merriweather",serif}ul,ul li{list-style:none}img{vertical-align:top}img,svg{max-width:100%;height:auto}address{font-style:normal}input,select,textarea{background-color:transparent}button,input,select,textarea{font-size:inherit;color:inherit;font-family:sans-serif}input::-ms-clear{display:none}button,input[type=submit]{display:inline-block;-webkit-box-shadow:none;box-shadow:none;background-color:transparent;background:0 0;cursor:pointer}button:active,button:focus,input:active,input:focus{outline:0}button::-moz-focus-inner{padding:0;border:0}label{cursor:pointer}*{padding:0;margin:0;border:0}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}body,html{overflow-x:hidden}html{font-size:10px}body{font-family:"Golos Text",sans-serif}.container{width:100%;max-width:1252px;padding:0 15px;margin:0 auto}.title,body{color:#313131}.title{font-family:"Merriweather",serif;font-weight:400;font-size:6rem;line-height:110%;text-transform:uppercase}.header{position:absolute;top:0;left:0;right:0;z-index:1000;padding:26px 0}.header-logotype{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:6px}.header-logotype__image{max-width:92px}.header-logotype__title{font-family:var(--ff-golos);color:#595653;font-size:1.6rem;line-height:108%;text-transform:uppercase;font-weight:700}.hero{padding:110px 0 132px;background:url(../img/hero-background.jpg) no-repeat center center/cover}.hero__title--center{text-align:center;display:block}.hero__title--right{text-align:right;display:block}.hero-inner{max-width:542px}.hero__description{margin:24px 0 40px;line-height:130%;font-size:1.8rem;text-align:center}.hero-buttons,.hero-buttons__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.hero-buttons{gap:16px}.hero-buttons__item{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;border:2px solid #1f1f1f;width:100%;max-width:263px;height:72px;border-radius:66px;font-weight:500;padding:0 49px;text-align:center;font-size:1.6rem;line-height:130%;-webkit-transition:.3s;transition:.3s}.hero-buttons__item--dark,.hero-buttons__item:hover{background-color:#1f1f1f;color:#fff}.hero-buttons__item--dark:hover{background-color:#fbce51;border:2px solid #fbce51;color:#1f1f1f}.running-line{display:-webkit-box;display:-ms-flexbox;display:flex;gap:30px;padding:18px 0;background-color:#f54932}.running-line__item{font-family:"Merriweather",serif;font-size:2.2rem;color:#fff;line-height:110%;-ms-flex-negative:0;flex-shrink:0}.tournament{padding:100px 0}.tournament-header{display:grid;gap:64px;grid-template-columns:1fr 394px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-bottom:64px}.tournament-header__title,.tournament-info__title{font-family:"Merriweather",serif;font-size:3.6rem;line-height:135%;text-transform:uppercase}.tournament-header__title span,.tournament-info__title span{font-weight:700;color:#f54932}.tournament-info__title{margin-bottom:60px}.tournament-info-table{width:100%}.tournament-info-table td{border-bottom:1px solid #d0d0d0;padding:16px 16px 16px 0;font-size:2rem;opacity:.7;line-height:120%}.tournament-info-table tr:last-child td{border:0}.tournament-info-table tr td:last-child{font-weight:600;opacity:1;padding-left:16px}.tournament-info-table tr td:first-child{border-right:1px solid #d0d0d0}.tournament-info__note{margin-top:32px;line-height:120%;font-size:2rem;color:#3057a2}.tournament-body{display:grid;grid-template-columns:500px 1fr;gap:20px}@supports (-webkit-appearance:none){.hero{background:url(../img/hero-background.webp) no-repeat center center/cover}}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
