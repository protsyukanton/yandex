a{color:#000}a,a:hover,a:link,a:visited{text-decoration:none}aside,footer,header,main,nav,section{display:block}h1,h2,h3,h4,h5,h6,p{font-size:inherit;font-weight:inherit}h1,h2,h3,h4,h5,h6{font-family:"Merriweather",serif}ul,ul li{list-style:none}img{vertical-align:top}img,svg{max-width:100%;height:auto}address{font-style:normal}input,select,textarea{background-color:transparent}button,input,select,textarea{font-size:inherit;color:inherit;font-family:sans-serif}input::-ms-clear{display:none}button,input[type=submit]{display:inline-block;-webkit-box-shadow:none;box-shadow:none;background-color:transparent;background:0 0;cursor:pointer}button:active,button:focus,input:active,input:focus{outline:0}button::-moz-focus-inner{padding:0;border:0}label{cursor:pointer}*{padding:0;margin:0;border:0}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}body,html{overflow-x:hidden}html{font-size:10px}body{font-family:"Golos Text",sans-serif}.container{width:100%;max-width:1252px;padding:0 15px;margin:0 auto}.title,body{color:#313131}.title{font-family:"Merriweather",serif;font-weight:400;font-size:6rem;line-height:110%;text-transform:uppercase}.header{position:absolute;top:0;left:0;right:0;z-index:1000;padding:26px 0}.header-logotype{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:6px}.header-logotype__image{max-width:92px}.header-logotype__title{font-family:var(--ff-golos);color:#595653;font-size:1.6rem;line-height:108%;text-transform:uppercase;font-weight:700}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
